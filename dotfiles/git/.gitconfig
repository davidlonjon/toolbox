[user]
    name = David Lonjon
    email = david.lonjon@gmail.com

[core]
    # editor = vi
    excludesfile = /Users/davidlonjon/.gitignore_global
    # Taken from http://nuclearsquid.com/writings/git-tricks-tips-workflows/
    whitespace = trailing-space,space-before-tab
    # Taken from https://help.github.com/articles/dealing-with-line-endings
    autocrlf = input

[color]
    branch = auto
    diff = auto
    interactive = auto
    status = auto

[advice]
    # Remove the hint when doing a git status
    # statusHints = false

[apply]
    # Taken from https://github.com/mathiasbynens/dotfiles/blob/master/.gitconfig
    # Detect whitespace errors when applying a patch
    whitespace = fix

[merge]
    # Taken from https://github.com/mathiasbynens/dotfiles/blob/master/.gitconfig
    # Include summaries of merged commits in newly created merge commit messages
    # log = true
    # No fast forward merges
    # ff = only
    summary=true
    stat = true
    tool = vimdiff

[rerere]
    # Remember my merges
    # http://gitfu.wordpress.com/2008/04/20/git-rerere-rereremember-what-you-did-last-time/
    # enabled = true

# Push and pull the current branch to its tracking branch
# the usual default is to push all branches
[pull]
    default = matching

[push]
    default = matching

[diff]
    tool = vimdiff
    # Git diff will use (i)ndex, (w)ork tree, (c)ommit and (o)bject
    # instead of a/b/c/d as prefixes for patches
    mnemonicprefix = true
    # Taken from http://nuclearsquid.com/writings/git-tricks-tips-workflows/
    renames = copies

[alias]
    # https://github.com/whiteinge/dotfiles/blob/master/.gitconfig
    # Perform a merge in-memory and output if any conflicts are found (dry-run)
    # Takes the name of a branch / ref to merge
    mergetest = "!sh -c 'git merge-tree `git merge-base $1 HEAD` $1 HEAD \
        | awk '\\''/^@@/ { print \"Conflicts found\"; exit 1 }'\\''' -"

    # https://github.com/whiteinge/dotfiles/blob/master/.gitconfig
    # Compare local branches to remote branches (without doing a fetch!)
    # Takes (optional) remote name as an argument; default: "upstream".
    # FIXME: branches that are ahead of upstream will also be shown.
    showstale = "!bash -c 'join -j 2 \
        <(git show-ref --heads) \
        <(git ls-remote --heads ${1:-upstream}) \
        | awk '\\''{ if ($2 != $3) print $1 }'\\''' -"

    # https://github.com/whiteinge/dotfiles/blob/master/.gitconfig
    # Show all remote branches that have been merged
    allmerged = "!git branch -r -v --no-abbrev --merged | \
        awk '!/master*|develop*|HEAD/ { print $2,$1 }'"

    # https://github.com/whiteinge/dotfiles/blob/master/.gitconfig
    # Open all modified files in EDITOR
    editm = "!$EDITOR $(git ls-files -m)"

    # https://github.com/whiteinge/dotfiles/blob/master/.gitconfig
    l = log --oneline --decorate
    ll = log --stat --decorate --abbrev-commit --date=relative
    lll = log -p --stat --decorate --abbrev-commit --date=relative
    llll = "!sh -c 'git lll $@ \
        | gvim - -R -v -c \"set ft=git\" -c \"set fdm=syntax\"' -"

[github]
    user = "davidlonjon"

[url "git@github.com:"]
    insteadOf = gh://

[url "git@bitbucket.org:"]
    insteadOf = bb://
[filter "media"]
	required = true
	clean = git media clean %f
	smudge = git media smudge %f
[credential]
	helper = osxkeychain
[url "http://lonjond@stash.news.com.au/scm"]
    insteadOf = ssh://git@stash.news.com.au
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[commit]
	template = /Users/davidlonjon/.stCommitMsg
